name: Auto Deploy

defaults:
  tools:
    node: 22.18.0

# The following workflow runs on each push to the main branch and performs the following:

# Takes a hash of the native characteristics of the project using Expo Fingerprint.
# Checks if a build already exists for the fingerprint.
# If a build does not exist, it will build the project and submit it to the app stores.
# If a build exists, it will send an over-the-air update.

on:
  push:
    branches:
      - main

jobs:
  fingerprint:
    name: Fingerprint
    type: fingerprint
    env:
      APP_ENV: production

  get_android_build:
    name: Check for existing android build
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.android_fingerprint_hash }}
      profile: production

  get_ios_build:
    name: Check for existing ios build
    needs: [fingerprint]
    type: get-build
    params:
      fingerprint_hash: ${{ needs.fingerprint.outputs.ios_fingerprint_hash }}
      profile: production

  build_android:
    name: Build Android
    needs: [get_android_build]
    if: ${{ !needs.get_android_build.outputs.build_id }}
    type: build
    params:
      platform: android
      profile: production

  build_ios:
    name: Build iOS
    needs: [get_ios_build]
    if: ${{ !needs.get_ios_build.outputs.build_id }}
    type: build
    image: macos-sequoia-15.6-xcode-26.0
    params:
      platform: ios
      profile: production

  submit_android_build:
    name: Submit Android Build
    needs: [build_android]
    type: submit
    params:
      build_id: ${{ needs.build_android.outputs.build_id }}
      profile: production

  submit_ios_build:
    name: Submit iOS Build
    needs: [build_ios]
    type: submit
    params:
      build_id: ${{ needs.build_ios.outputs.build_id }}
      profile: production

  publish_android_update:
    name: Publish Android update
    needs: [get_android_build]
    if: ${{ needs.get_android_build.outputs.build_id }}
    type: update
    params:
      profile: production
      platform: android

  publish_ios_update:
    name: Publish iOS update
    needs: [get_ios_build]
    if: ${{ needs.get_ios_build.outputs.build_id }}
    type: update
    params:
      profile: production
      platform: ios
